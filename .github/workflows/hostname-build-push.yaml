name: Hostname Images Build&Push
on:
  push:
    branches:
      - master

env:
  HUB_USERNAME: ${{ vars.HUB_USERNAME }}
  REGISTRY: docker.io
  DOCKER_IMAGE: hostname
  DOCKER_IMAGE_TAG: latest
  DOCKER_FULL_IMAGE: "docker.io/falmar/hostname:latest"
  DOCKER_CACHE_IMAGE: "docker.io/falmar/hostname:buildcache"

jobs:
  build:
    name: build platform images
    strategy:
      matrix:
        arch: [ amd64, arm64 ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker BuildKit
        uses: docker/setup-buildx-action@v3
        with:
          driver: remote
          endpoint: tcp://amd64.${{ secrets.BUILDKIT_HOST }}:1234
          platforms: linux/amd64
          append: |
            - endpoint: tcp://arm64.${{ secrets.BUILDKIT_HOST }}:1234
              driver: remote
              platforms: linux/arm64
        env:
          BUILDER_NODE_0_AUTH_TLS_CACERT: ${{ secrets.DOCKER_TLS_CA }}
          BUILDER_NODE_0_AUTH_TLS_CERT: ${{ secrets.DOCKER_TLS_CERT }}
          BUILDER_NODE_0_AUTH_TLS_KEY: ${{ secrets.DOCKER_TLS_KEY }}
          BUILDER_NODE_1_AUTH_TLS_CACERT: ${{ secrets.DOCKER_TLS_CA }}
          BUILDER_NODE_1_AUTH_TLS_CERT: ${{ secrets.DOCKER_TLS_CERT }}
          BUILDER_NODE_1_AUTH_TLS_KEY: ${{ secrets.DOCKER_TLS_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Build and push base
        uses: docker/build-push-action@v6

        env:
          CACHE_IMAGE: "${{ env.DOCKER_CACHE_IMAGE }}-linux-${{ matrix.arch }}"

        with:
          platforms: "linux/${{ matrix.arch }}"
          context: .
          push: true
          provenance: false
          file: ./hostname/Dockerfile
          tags: "${{ env.DOCKER_FULL_IMAGE }}-linux-${{ matrix.arch }}"
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max,force-compression=true

  manifest:
    needs:
      - build
    name: push merged platform images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Create and push Docker Manifest

        run: |
          docker manifest create \
            ${{ env.DOCKER_FULL_IMAGE }} \
            ${{ env.DOCKER_FULL_IMAGE }}-linux-amd64  \
            ${{ env.DOCKER_FULL_IMAGE }}-linux-arm64 

          docker manifest annotate --arch arm64 ${{ env.DOCKER_FULL_IMAGE }} \
                ${{ env.DOCKER_FULL_IMAGE }}-linux-arm64
          docker manifest annotate --arch amd64 ${{ env.DOCKER_FULL_IMAGE }} \
                ${{ env.DOCKER_FULL_IMAGE }}-linux-amd64
          
          docker manifest push ${{ env.DOCKER_FULL_IMAGE }}
