name: PHP Images Build&Push
on:
  push:
    branches:
      - master

env:
  REGISTRY: docker.io
  DOCKER_USERNAME: ${{ vars.HUB_USERNAME }}
  DOCKER_IMAGE: php
  DOCKER_IMAGE_NAME: docker.io/${{ vars.HUB_USERNAME }}/php

jobs:
  build:
    runs-on: ubuntu-latest
    name: build platform images

    strategy:
      matrix:
        php_version: [ "8.2", "8.3", "8.4" ]
        tag: [ cli, fpm ]
        arch: [ amd64, arm64 ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker BuildKit
        uses: docker/setup-buildx-action@v3
        with:
          use: true
          driver: remote
          endpoint: tcp://amd64.${{ secrets.BUILDKIT_HOST }}:1234
          platforms: linux/amd64
          append: |
            - endpoint: tcp://arm64.${{ secrets.BUILDKIT_HOST }}:1234
              driver: remote
              platforms: linux/arm64
        env:
          BUILDER_NODE_0_AUTH_TLS_CACERT: ${{ secrets.DOCKER_TLS_CA }}
          BUILDER_NODE_0_AUTH_TLS_CERT: ${{ secrets.DOCKER_TLS_CERT }}
          BUILDER_NODE_0_AUTH_TLS_KEY: ${{ secrets.DOCKER_TLS_KEY }}
          BUILDER_NODE_1_AUTH_TLS_CACERT: ${{ secrets.DOCKER_TLS_CA }}
          BUILDER_NODE_1_AUTH_TLS_CERT: ${{ secrets.DOCKER_TLS_CERT }}
          BUILDER_NODE_1_AUTH_TLS_KEY: ${{ secrets.DOCKER_TLS_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: "Build & Push"
        uses: docker/build-push-action@v6
        env:
          DOCKER_FULL_IMAGE: "${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php_version }}-${{ matrix.tag }}-${{matrix.arch}}"
        with:
          platforms: linux/${{matrix.arch}}
          context: .
          push: true
          target: base
          provenance: false
          file: ./php/${{ matrix.tag }}.dockerfile
          tags: "${{ env.DOCKER_FULL_IMAGE }}"
          build-args: |
            BUILDX_PHP_VERSION=${{ matrix.php_version }}
          cache-from: |
            type=registry,ref=${{ env.DOCKER_FULL_IMAGE }}-cache
            type=registry,ref=${{ env.DOCKER_FULL_IMAGE }}-cache-dev
          cache-to: type=registry,ref=${{ env.DOCKER_FULL_IMAGE }}-cache,mode=max,force-compression=true

      - name: "Build & Push (dev)"
        uses: docker/build-push-action@v4
        env:
          DOCKER_FULL_IMAGE: "${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php_version }}-${{ matrix.tag }}-${{matrix.arch}}"
        with:
          platforms: linux/${{matrix.arch}}
          context: .
          push: true
          target: dev
          provenance: false
          file: ./php/${{ matrix.tag }}.dockerfile
          tags: "${{ env.DOCKER_FULL_IMAGE }}-dev"
          build-args: |
            BUILDX_PHP_VERSION=${{ matrix.php_version }}
          cache-from: |
            type=registry,ref=${{ env.DOCKER_FULL_IMAGE }}-cache
            type=registry,ref=${{ env.DOCKER_FULL_IMAGE }}-cache-dev
          cache-to: type=registry,ref=${{ env.DOCKER_FULL_IMAGE }}-cache-dev,mode=max,force-compression=true


  manifest:
    needs:
      - build
    name: push merged platform images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: [ "8.2", "8.3", "8.4" ]
        tag: [ cli, sql ]

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: "Create&Push Docker Manifest"
        env:
          DOCKER_FULL_IMAGE: "${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php_version }}-${{ matrix.tag }}"

        run: |
          docker manifest create \
            ${{ env.DOCKER_FULL_IMAGE }} \
            ${{ env.DOCKER_FULL_IMAGE }}-amd64 \
            ${{ env.DOCKER_FULL_IMAGE }}-arm64 

          docker manifest annotate --arch arm64 ${{ env.DOCKER_FULL_IMAGE }} \
                ${{ env.DOCKER_FULL_IMAGE }}-arm64
          docker manifest annotate --arch amd64 ${{ env.DOCKER_FULL_IMAGE }} \
                ${{ env.DOCKER_FULL_IMAGE }}-amd64
          
          docker manifest push ${{ env.DOCKER_FULL_IMAGE }}

      - name: "Create&Push Docker Manifest (dev)"
        env:
          DOCKER_FULL_IMAGE: "${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php_version }}-${{ matrix.tag }}"

        run: |
          docker manifest create \
            ${{ env.DOCKER_FULL_IMAGE }}-dev \
            ${{ env.DOCKER_FULL_IMAGE }}-amd64-dev  \
            ${{ env.DOCKER_FULL_IMAGE }}-arm64-dev 

          docker manifest annotate --arch arm64 ${{ env.DOCKER_FULL_IMAGE }}-dev \
                ${{ env.DOCKER_FULL_IMAGE }}-arm64-dev
          docker manifest annotate --arch amd64 ${{ env.DOCKER_FULL_IMAGE }}-dev \
                ${{ env.DOCKER_FULL_IMAGE }}-amd64-dev
          
          docker manifest push ${{ env.DOCKER_FULL_IMAGE }}-dev
